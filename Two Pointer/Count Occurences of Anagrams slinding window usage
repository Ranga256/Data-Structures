Input:
txt = forxxorfxdofr
pat = for
Output: 3
Explanation: for, orf and ofr appears
in the txt, hence answer is 3.




class Solution {

    int search(String pat, String txt) {
        // code here
        int count,ans=0;
        Map<Character,Integer> map=new HashMap<>();
        int k=pat.length();
        for(int i=0;i<k;i++){
            if(map.containsKey(pat.charAt(i))){
                map.put(pat.charAt(i),map.get(pat.charAt(i))+1);
            }else{
                map.put(pat.charAt(i),1);
            }
        }
        count=map.size();
        for(int i=0;i<k;i++){
            if(map.containsKey(txt.charAt(i))){
                map.put(txt.charAt(i),map.get(txt.charAt(i))-1);
            if(map.get(txt.charAt(i))==0){
                count--;
            }
            }
        }
        if(count==0){
            ans++;
        }
        if(map.containsKey(txt.charAt(0))){
            map.put(txt.charAt(0),map.get(txt.charAt(0))+1);
            if(map.get(txt.charAt(0))==1){
                count++;
            }
            }
        int i=1,j=k;
        while(j<txt.length()){
            if(map.containsKey(txt.charAt(j))){
                map.put(txt.charAt(j),map.get(txt.charAt(j))-1);
                if(map.get(txt.charAt(j))==0){
                  count--;
              }
            }
            if(count==0){
                ans++;
            }
            if(map.containsKey(txt.charAt(i))){
            map.put(txt.charAt(i),map.get(txt.charAt(i))+1);
            if(map.get(txt.charAt(i))==1){
                count++;
            }
            }
            i++;
            j++;
        }
        return ans;
    }
}

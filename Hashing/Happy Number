A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.

Return true if n is a happy number, and false if not.

Input: n = 19
Output: true
Explanation:
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1

Intuition: store every number until number repeats.

class Solution {
    public boolean isHappy(int n) {
        List<Integer> hash=new ArrayList<Integer>();
        int rem=0,sum=0,temp;
        while(!hash.contains(n)){
            hash.add(n);
            sum=0;
            rem=n;
            while(rem>0){
                temp=rem%10;
                sum=sum+(temp*temp);
                rem=rem/10;
            }
            n=sum;
            if(n==1){
                return true;
            }
        }
        return false;
    }
}

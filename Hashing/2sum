Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

Intuition: Check target-nums integer contains in hash or not and store them in hash if not contains,return both indexs if contains.
class Solution {
    public int[] twoSum(int[] nums, int target) {
      int[] res=new int[2];
        Map<Integer,Integer> hash=new HashMap<Integer,Integer>();
        for(int i=0;i<nums.length;i++){
            if(hash.containsKey(target-nums[i])){
                res[1]=i;
                res[0]=hash.get(target-nums[i]);
                break;
            }
            hash.put(nums[i],i);
        }
        return res;
    }
}

Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

Brute force approach would be looping every item in O(n2) complexity.

Intuition: Store all items in hash table and loop every item and check (item-1) contains in hash or not and loop the next elements
by adding count.

class Solution {
    public int longestConsecutive(int[] nums) {
        Set<Integer> seq=new HashSet<Integer>();
        for(int num: nums){
            seq.add(num);
        }
        int maax=0,k,count;
        for(int i=0;i<nums.length;i++){
            if(!seq.contains(nums[i]-1)){
                k=nums[i]+1;
                count=1;
                while(seq.contains(k)){
                    count+=1;
                    k+=1;
                }
                maax=Math.max(count,maax);
            }
        }
        return maax;
    }
}

Input: s = "cbaebabacd", p = "abc"
Output: [0,6]
Explanation:
The substring with start index = 0 is "cba", which is an anagram of "abc".
The substring with start index = 6 is "bac", which is an anagram of "abc".

Intuition: Hash chars of 2nd str in count2 and first 3 of str1 in count1, and move using sliding window by comparing each window


class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> res=new ArrayList<>();
        int[] count1=new int[256];
        int[] count2=new int[256];
        char[] str2=p.toCharArray();
        int l1=s.length(),l2=p.length(),f=0,c=0;
        if(l1<l2){
            return res;
        }
        for(int i=0;i<l2;i++){
            count2[str2[i]]++;
        }
        for(int i=0;i<l2;i++){
            count1[s.charAt(i)]++;
        }
        for(int i=l2;i<=l1;i++){
            f=0;
            for (int j = 0; j < 256; j++){
                if(count1[j]!=count2[j]){
                    f=1;
                    break;
                }
            }
            if(f==0){
                res.add(c);
            }
            if(i<l1){
            count1[s.charAt(i)]++;
            count1[s.charAt(c)]--;
            c++;
            }
        }
        return res;
    }
}

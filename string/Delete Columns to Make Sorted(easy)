You are given an array of n strings strs, all of the same length.

The strings can be arranged such that there is one on each line, making a grid.

For example, strs = ["abc", "bce", "cae"] can be arranged as follows:
abc
bce
cae
You want to delete the columns that are not sorted lexicographically. In the above example (0-indexed), columns 0 ('a', 'b', 'c') and 2 ('c', 'e', 'e') are sorted, 
while column 1 ('b', 'c', 'a') is not, so you would delete column 1.

Return the number of columns that you will delete.

Intuition: count total cols of not in sorted by starting from 1st index row.

class Solution {
    public int minDeletionSize(String[] strs) {
        int m=strs.length,n=strs[0].length(),count=0;
        int[] c=new int[n];
        for(int i=1;i<m;i++){
            for(int j=0;j<n;j++){
                if(strs[i].charAt(j)<strs[i-1].charAt(j)){
                    c[j]++;
                }
            }
        }
        for(int i=0;i<n;i++){
            if(c[i]>0){
                count++;
            }
        }
        return count;
    }
}

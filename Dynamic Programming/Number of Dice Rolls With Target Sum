You have n dice and each die has k faces numbered from 1 to k.

Given three integers n, k, and target, return the number of possible ways (out of the kn total ways) to roll the dice so the sum of the face-up numbers equals target. 
Since the answer may be too large, return it modulo 109 + 7.

Input: n = 1, k = 6, target = 3
Output: 1
Explanation: You throw one die with 6 faces.
There is only one way to get a sum of 3.



class Solution {
    public int helper(int n,int k,int target,int[][] dp){
        if(target<0){
            return 0;
        }
        if(n==0 && target!=0){
            return 0;
        }
        if(n!=0 && target==0){
            return 0;
        }
        if(n==0 && target==0){
            return 1;
        }
        if(dp[n][target]!=-1){
            return dp[n][target];
        }
        int res=0;
        for(int i=1;i<=k;i++){
            res=(int)((res+helper(n-1,k,target-i,dp))%1000000007);
        }
        return dp[n][target]=res;
    }
    public int numRollsToTarget(int n, int k, int target) {
        int[][] dp=new int[n+1][target+1];
        for(int[] arr:dp){
            Arrays.fill(arr,-1);
        }
        return helper(n,k,target,dp);
    }
}

Given an integer array nums of size n, return the minimum number of moves required to make all array elements equal.

In one move, you can increment or decrement an element of the array by 1.

Input: nums = [1,2,3]
Output: 2
Explanation:
Only two moves are needed (remember each move increments or decrements one element):
[1,2,3]  =>  [2,2,3]  =>  [2,2,2]

Intuition: sort the given arrya take mid element and do increments or decrements and add them to count.


class Solution {
    public int minMoves2(int[] nums) {
        int count=0,n=nums.length;
        Arrays.sort(nums);
        int mid=nums[(0+n)/2];
        for(int i=0;i<n;i++){
            count+=Math.abs(mid-nums[i]);
        }
        return count;
    }
}
